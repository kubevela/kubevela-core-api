/*
Copyright 2023 The KubeVela Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	common "github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/common"
	runtime "k8s.io/apimachinery/pkg/runtime"
	types "k8s.io/apimachinery/pkg/types"
)

// ManagedResourceApplyConfiguration represents an declarative configuration of the ManagedResource type for use
// with apply.
type ManagedResourceApplyConfiguration struct {
	common.ClusterObjectReference `json:",inline"`
	common.OAMObjectReference     `json:",inline"`
	Data                          *runtime.RawExtension `json:"raw,omitempty"`
	Deleted                       *bool                 `json:"deleted,omitempty"`
	SkipGC                        *bool                 `json:"skipGC,omitempty"`
}

// ManagedResourceApplyConfiguration constructs an declarative configuration of the ManagedResource type for use with
// apply.
func ManagedResource() *ManagedResourceApplyConfiguration {
	return &ManagedResourceApplyConfiguration{}
}

// WithCluster sets the Cluster field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Cluster field is set to the value of the last call.
func (b *ManagedResourceApplyConfiguration) WithCluster(value string) *ManagedResourceApplyConfiguration {
	b.Cluster = &value
	return b
}

// WithCreator sets the Creator field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Creator field is set to the value of the last call.
func (b *ManagedResourceApplyConfiguration) WithCreator(value string) *ManagedResourceApplyConfiguration {
	b.Creator = &value
	return b
}

// WithKind sets the Kind field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Kind field is set to the value of the last call.
func (b *ManagedResourceApplyConfiguration) WithKind(value string) *ManagedResourceApplyConfiguration {
	b.Kind = &value
	return b
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *ManagedResourceApplyConfiguration) WithNamespace(value string) *ManagedResourceApplyConfiguration {
	b.Namespace = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ManagedResourceApplyConfiguration) WithName(value string) *ManagedResourceApplyConfiguration {
	b.Name = &value
	return b
}

// WithUID sets the UID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UID field is set to the value of the last call.
func (b *ManagedResourceApplyConfiguration) WithUID(value types.UID) *ManagedResourceApplyConfiguration {
	b.UID = &value
	return b
}

// WithAPIVersion sets the APIVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the APIVersion field is set to the value of the last call.
func (b *ManagedResourceApplyConfiguration) WithAPIVersion(value string) *ManagedResourceApplyConfiguration {
	b.APIVersion = &value
	return b
}

// WithResourceVersion sets the ResourceVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ResourceVersion field is set to the value of the last call.
func (b *ManagedResourceApplyConfiguration) WithResourceVersion(value string) *ManagedResourceApplyConfiguration {
	b.ResourceVersion = &value
	return b
}

// WithFieldPath sets the FieldPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FieldPath field is set to the value of the last call.
func (b *ManagedResourceApplyConfiguration) WithFieldPath(value string) *ManagedResourceApplyConfiguration {
	b.FieldPath = &value
	return b
}

// WithComponent sets the Component field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Component field is set to the value of the last call.
func (b *ManagedResourceApplyConfiguration) WithComponent(value string) *ManagedResourceApplyConfiguration {
	b.Component = &value
	return b
}

// WithTrait sets the Trait field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Trait field is set to the value of the last call.
func (b *ManagedResourceApplyConfiguration) WithTrait(value string) *ManagedResourceApplyConfiguration {
	b.Trait = &value
	return b
}

// WithData sets the Data field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Data field is set to the value of the last call.
func (b *ManagedResourceApplyConfiguration) WithData(value runtime.RawExtension) *ManagedResourceApplyConfiguration {
	b.Data = &value
	return b
}

// WithDeleted sets the Deleted field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Deleted field is set to the value of the last call.
func (b *ManagedResourceApplyConfiguration) WithDeleted(value bool) *ManagedResourceApplyConfiguration {
	b.Deleted = &value
	return b
}

// WithSkipGC sets the SkipGC field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SkipGC field is set to the value of the last call.
func (b *ManagedResourceApplyConfiguration) WithSkipGC(value bool) *ManagedResourceApplyConfiguration {
	b.SkipGC = &value
	return b
}

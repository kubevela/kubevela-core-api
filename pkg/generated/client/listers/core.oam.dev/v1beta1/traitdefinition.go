/*
Copyright 2023 The KubeVela Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/v1beta1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// TraitDefinitionLister helps list TraitDefinitions.
// All objects returned here must be treated as read-only.
type TraitDefinitionLister interface {
	// List lists all TraitDefinitions in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.TraitDefinition, err error)
	// TraitDefinitions returns an object that can list and get TraitDefinitions.
	TraitDefinitions(namespace string) TraitDefinitionNamespaceLister
	TraitDefinitionListerExpansion
}

// traitDefinitionLister implements the TraitDefinitionLister interface.
type traitDefinitionLister struct {
	listers.ResourceIndexer[*v1beta1.TraitDefinition]
}

// NewTraitDefinitionLister returns a new TraitDefinitionLister.
func NewTraitDefinitionLister(indexer cache.Indexer) TraitDefinitionLister {
	return &traitDefinitionLister{listers.New[*v1beta1.TraitDefinition](indexer, v1beta1.Resource("traitdefinition"))}
}

// TraitDefinitions returns an object that can list and get TraitDefinitions.
func (s *traitDefinitionLister) TraitDefinitions(namespace string) TraitDefinitionNamespaceLister {
	return traitDefinitionNamespaceLister{listers.NewNamespaced[*v1beta1.TraitDefinition](s.ResourceIndexer, namespace)}
}

// TraitDefinitionNamespaceLister helps list and get TraitDefinitions.
// All objects returned here must be treated as read-only.
type TraitDefinitionNamespaceLister interface {
	// List lists all TraitDefinitions in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.TraitDefinition, err error)
	// Get retrieves the TraitDefinition from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.TraitDefinition, error)
	TraitDefinitionNamespaceListerExpansion
}

// traitDefinitionNamespaceLister implements the TraitDefinitionNamespaceLister
// interface.
type traitDefinitionNamespaceLister struct {
	listers.ResourceIndexer[*v1beta1.TraitDefinition]
}

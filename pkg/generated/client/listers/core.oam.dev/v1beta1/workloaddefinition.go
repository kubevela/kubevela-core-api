/*
Copyright 2023 The KubeVela Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/v1beta1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// WorkloadDefinitionLister helps list WorkloadDefinitions.
// All objects returned here must be treated as read-only.
type WorkloadDefinitionLister interface {
	// List lists all WorkloadDefinitions in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.WorkloadDefinition, err error)
	// WorkloadDefinitions returns an object that can list and get WorkloadDefinitions.
	WorkloadDefinitions(namespace string) WorkloadDefinitionNamespaceLister
	WorkloadDefinitionListerExpansion
}

// workloadDefinitionLister implements the WorkloadDefinitionLister interface.
type workloadDefinitionLister struct {
	listers.ResourceIndexer[*v1beta1.WorkloadDefinition]
}

// NewWorkloadDefinitionLister returns a new WorkloadDefinitionLister.
func NewWorkloadDefinitionLister(indexer cache.Indexer) WorkloadDefinitionLister {
	return &workloadDefinitionLister{listers.New[*v1beta1.WorkloadDefinition](indexer, v1beta1.Resource("workloaddefinition"))}
}

// WorkloadDefinitions returns an object that can list and get WorkloadDefinitions.
func (s *workloadDefinitionLister) WorkloadDefinitions(namespace string) WorkloadDefinitionNamespaceLister {
	return workloadDefinitionNamespaceLister{listers.NewNamespaced[*v1beta1.WorkloadDefinition](s.ResourceIndexer, namespace)}
}

// WorkloadDefinitionNamespaceLister helps list and get WorkloadDefinitions.
// All objects returned here must be treated as read-only.
type WorkloadDefinitionNamespaceLister interface {
	// List lists all WorkloadDefinitions in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.WorkloadDefinition, err error)
	// Get retrieves the WorkloadDefinition from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.WorkloadDefinition, error)
	WorkloadDefinitionNamespaceListerExpansion
}

// workloadDefinitionNamespaceLister implements the WorkloadDefinitionNamespaceLister
// interface.
type workloadDefinitionNamespaceLister struct {
	listers.ResourceIndexer[*v1beta1.WorkloadDefinition]
}
